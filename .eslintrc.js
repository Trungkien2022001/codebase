module.exports = {
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: 'tsconfig.json',
    tsconfigRootDir: __dirname,
    sourceType: 'module',
  },
  plugins: ['@typescript-eslint/eslint-plugin'],
  extends: [
    'plugin:@typescript-eslint/recommended',
    'plugin:prettier/recommended',
  ],
  root: true,
  env: {
    node: true,
    jest: true,
  },
  ignorePatterns: ['.eslintrc.js'],
  rules: {
    'no-undef': 'error',
    "no-console": "warn",
    "no-var": "error",
    "eol-last": ["error", "always"],
    "indent": ["error", 2],
    "quotes": ["error", "single"],
    '@typescript-eslint/no-redeclare': 'error',
    '@typescript-eslint/explicit-module-boundary-types': 'warn',
    '@typescript-eslint/no-unused-vars': ['error', { argsIgnorePattern: '^_' }],
    '@typescript-eslint/interface-name-prefix': 'off',
    '@typescript-eslint/explicit-function-return-type': 'off',
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    "@typescript-eslint/consistent-type-definitions": ["error", "interface"],
    "prettier/prettier": "error",
    "quotes": ["error", "single"],
    "max-len": ["error", { "code": 200 }],
    "no-console": "off",
    "no-empty": "off",
    "no-duplicate-imports": "error",
    "comma-dangle": ["error", "never"],
    "@typescript-eslint/ban-ts-ignore": "off",
    "camelcase": ["warn"],
    "eqeqeq": ["warn"],
    "radix": ["warn"],
    "no-implicit-globals": "error",
    "newline-per-chained-call": ["warn"],
    "newline-before-return": "error",
    "no-restricted-syntax": ["warn"],
    "no-param-reassign": ["error", { "props": false }],
    "prettier/prettier": ["error", {
      "singleQuote": true,
      "semi": false,
      "tabWidth": 4
    }]
  },
};
